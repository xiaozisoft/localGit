#include "stdafx.h"
#include "testInitConf.h"

Rwe initDataFlow[] = {
    { 0, 0x0020, 0x08070a09 },
    { 0, 0x0038, 0x00001918 },
    { 0, 0x0034, 0x17161514 },
    { 0, 0x0030, 0x13121110 },
    { 0, 0x002c, 0x0f0e0d0c },
    { 0, 0x0028, 0xff0b1d1c },
    { 0, 0x0024, 0x1b1a0605 },
    { 0, 0x0000, 0x00000001 },
    { 0, 0x0004, 0x00000004 },
    //{ 0, 0x0008, 0x005f0006 },
    { 0, 0x0008, 0xffff0007 },
    { 0, 0x000c, 0x00010000 },
    { 0, 0x0010, 0x00000903 },
    //{ 0, 0x0014, 0x00010102 },
    { 0, 0x0014, 0x0001ef02 },
    { 0, 0x0018, 0x00260006 },
    //{ 0, 0x0018, 0x00260000 },
    { 1, 0x0000, 0x0626028a },
    { 1, 0x0094, 0x00000d16 },
    { 1, 0x0098, 0x00000728 },
    //{ 1, 0x0098, 0x00000730 },
    { 1, 0x009c, 0x00000000 },
    { 1, 0x00a0, 0x00000a00 },
    //{ 1, 0x00a0, 0x00000a10 },
    { 1, 0x00a4, 0x0000011f },
    { 1, 0x00a8, 0x00000080 },
    //{ 1, 0x00a8, 0x00000086 },
    { 1, 0x00ac, 0x00000000 },
    { 1, 0x00b0, 0x00000000 },
    //{ 1, 0x00b0, 0x00000018 },
    { 1, 0x00b4, 0x00000002 },
    { 1, 0x00bc, 0x00000000 },
    { 1, 0x00fc, 0x05030c02 },
    { 1, 0x0100, 0x0c0c0404 },
    { 1, 0x0104, 0x02040808 },
    { 1, 0x0108, 0x0a0a1480 },
    { 1, 0x0004, 0x00080000 },
    { 1, 0x0114, 0xf00f0000 },
    { 1, 0x0118, 0xf00f0000 },
    { 1, 0x011c, 0xf00f0000 },
    { 1, 0x0120, 0xf00f0000 },
    { 1, 0x0124, 0xf00f0000 },
    { 1, 0x0128, 0xf0000000 },
    { 1, 0x012c, 0xf00f0000 },
    { 1, 0x0130, 0xf00f0000 },
    { 1, 0x0004, 0x000c4000 },
    { 1, 0x0110, 0x03f03f00 },
    { 1, 0x0004, 0x000e4000 },
    { 1, 0x017c, 0x00d00d00 },
    { 1, 0x0180, 0x00d00d00 },
    { 1, 0x0184, 0x00d00d00 },
    { 1, 0x0188, 0x00d00d00 },
    { 1, 0x018c, 0x00d00d00 },
    { 1, 0x0190, 0x00d00d00 },
    { 1, 0x0194, 0x00d00d00 },
    { 1, 0x0198, 0x00d00d00 },
    { 1, 0x019c, 0x00d00d00 },
    { 1, 0x01a0, 0x00d00d00 },
    { 1, 0x01a4, 0x00d00d00 },
    { 1, 0x01a8, 0x00d00d00 },
    { 1, 0x01ac, 0x00d00d00 },
    { 1, 0x01b0, 0x00d00d00 },
    { 1, 0x01b4, 0x00d00d00 },
    { 1, 0x01b8, 0x00d00d00 },
    { 1, 0x01bc, 0x00d00d00 },
    { 1, 0x01c0, 0x00d00d00 },
    { 1, 0x01c4, 0x00d00d00 },
    { 1, 0x01c8, 0x00d00d00 },
    { 1, 0x0004, 0x000f4000 },
    { 1, 0x0134, 0x01001000 },
    { 1, 0x0138, 0x01001000 },
    { 1, 0x013c, 0x01001000 },
    { 1, 0x0140, 0x01001000 },
    { 1, 0x0144, 0x01001000 },
    { 1, 0x0148, 0x01001000 },
    { 1, 0x014c, 0x01001000 },
    { 1, 0x0150, 0x01001000 },
    { 1, 0x0154, 0x01001000 },
    { 1, 0x0158, 0x01001000 },
    { 1, 0x015c, 0x01001000 },
    { 1, 0x0160, 0x01001000 },
    { 1, 0x0164, 0x01001000 },
    { 1, 0x0168, 0x01001000 },
    { 1, 0x016c, 0x01001000 },
    { 1, 0x0170, 0x01001000 },
    { 1, 0x0174, 0x01001000 },
    { 1, 0x0178, 0x01001000 },
    { 1, 0x010c, 0x01db1460 },
    { 1, 0x048c, 0x00000001 },
    { 1, 0x0490, 0x1f1f1f1f },
    { 1, 0x0494, 0x1f1f1f1f },
    { 1, 0x0498, 0x1f1f0000 },
    { 1, 0x049c, 0x1f1f1f1f },
    { 1, 0x04a0, 0x1f1f1f1f },
    { 1, 0x04a4, 0x1f1f1f1f },
    { 1, 0x04a8, 0x1f1f1f1f },
    { 1, 0x04ac, 0x1f1f1f1f },
    { 1, 0x04b0, 0x1f1f1f1f },
    { 1, 0x04b4, 0x1f1f1f1f },
    { 1, 0x04b8, 0x1f1f1f1f },
    { 1, 0x04bc, 0x1f1f1f1f },
    { 1, 0x04c0, 0x1f1f1f1f },
    //{ 1, 0x00c4, 0x000c8000 },
    { 1, 0x00c4, 0x02ee0000 },
    { 1, 0x00c8, 0x00028000 },
    { 1, 0x00cc, 0x0003c000 },
    { 1, 0x0004, 0x002f4000 },
    { 1, 0x00c0, 0xffffe800 },
    { 1, 0x0630, 0x0000a000 },
    { 1, 0x0634, 0x00000092 },
    { 1, 0x0638, 0x04000000 },
    { 1, 0x0624, 0xb3bfe000 },
    { 1, 0x0634, 0x00000012 },
    { 1, 0x0004, 0x102f4000 },
    //{ 1, 0x0004, 0x302fc000 },
};

unsigned int getSize(void)
{
    return sizeof(initDataFlow) / sizeof(initDataFlow[0]);
}

void setWindowValue(unsigned char v, unsigned int pos)
{
    static unsigned int lastSet = 0;
    unsigned int tmp = 0;
    size_t i = 0;
    tmp = v;
    tmp = tmp << 12;
    tmp |= v;
    tmp = tmp << 16;

    if (pos)
    {
        i = pos;
        initDataFlow[i].data &= (~lastSet);
        initDataFlow[i].data |= tmp;
    }
    else
    {
        for (i = 38; i < 58; i++)
        {
            initDataFlow[i].data &= (~lastSet);
            initDataFlow[i].data |= tmp;
        }
    }

    lastSet = tmp;
}

void setTestValue(unsigned int v)
{
    initDataFlow[13].data = v;
}